{"version":3,"sources":["services/people.js","App.js","index.js"],"names":["URL","axios","get","then","response","data","newObject","post","id","delete","put","Filter","filterPerson","handleFilterName","value","onChange","PersonForm","addName","newName","handleNameChange","newNumber","handleNewNumber","onSubmit","type","App","useState","persons","setPersons","setNewName","setNewNumber","setFilterPerson","errorMessage","setErrorMessage","useEffect","peopleService","initialPeople","deleteName","person","find","n","console","log","window","confirm","name","excluded","filter","setTimeout","RenderPeople","people","toUpperCase","indexOf","map","number","onClick","style","color","fontStyle","fontSize","background","width","event","target","preventDefault","includes","x","changedPerson","returned","z","alert","returnedPerson","concat","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6b7823d.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst URL = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(URL)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(URL, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst Delete = (id) => {\r\n    const request = axios.delete(`${URL}/${id}`)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${URL}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n\r\nexport default {getAll, create, Delete, update }","import React, { useState, useEffect } from 'react'\r\nimport peopleService from './services/people'\r\n\r\n\r\nconst Filter = ( {filterPerson, handleFilterName} ) => {\r\n  return (\r\n    <div>filter shown with <input value={filterPerson} onChange={handleFilterName}/></div>\r\n  )\r\n}\r\n\r\nconst PersonForm = ( {addName, newName, handleNameChange, newNumber, handleNewNumber} ) => {\r\n  return (\r\n<form onSubmit={addName}>\r\n        <div> name: <input value={newName} onChange={handleNameChange}/></div>\r\n        <div>number: <input value={newNumber} onChange={handleNewNumber}/></div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\n\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [filterPerson, setFilterPerson ] = useState('')\r\n  const [ errorMessage, setErrorMessage ] = useState('')\r\n\r\n  useEffect(() => {\r\n    peopleService\r\n      .getAll()\r\n        .then(initialPeople => {\r\n          setPersons(initialPeople)\r\n        })\r\n      }, [])\r\n\r\n  const addName = (event) => {\r\n\r\n    event.preventDefault()\r\n    const person = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n\r\n    if (persons.map(person => person.name).includes(newName)) {\r\n      let value = false\r\n      value = window.confirm(`${newName} is already added in the phonebook, do you want to change the number?`)\r\n      if (value) {\r\n        const person = persons.find(x => x.name === newName)\r\n        const changedPerson = { ...person, number: newNumber }\r\n        peopleService\r\n          .update(person.id, changedPerson)\r\n          .then(returned => {\r\n            setPersons(persons.map(person => person.name !== newName ? person : returned))\r\n            setNewName('')\r\n            setNewNumber('')\r\n          })\r\n        setErrorMessage(`A person called ${person.name} was updated`)\r\n        setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n }\r\n} else {\r\n     \r\n    const x = persons.map(z => z.name)\r\n    if (x.includes(newName)) {window.alert(\"name is already added to phonebook\")}\r\n    else if (newName === \"\" || newNumber === '') {window.alert('Fill the input')}\r\n    else {\r\n\r\n    peopleService\r\n      .create(person)\r\n      .then(returnedPerson => {\r\n        setPersons(persons.concat(returnedPerson))\r\n        setNewName('')\r\n        setNewNumber('')\r\n      })\r\n      .catch(error => {\r\n         if (error.response) setErrorMessage(error.response.data.error)\r\n         else setErrorMessage(`A person called ${person.name} was added`)\r\n\r\n      })\r\n      setTimeout(() => {\r\n      setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n} \r\n\r\n  const deleteName = id => {\r\n    const person = persons.find(n => n.id === id)\r\n    console.log(person)\r\n    let result = window.confirm(`Delete ${person.name}?`)\r\n    if (result) {\r\n    peopleService\r\n      .Delete(id)\r\n      .then(() => {\r\n        const excluded = persons.filter(person => person.id !== id)\r\n        setPersons(excluded)\r\n      })\r\n      setErrorMessage(`A person called ${person.name} was deleted`)\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n  }\r\n}\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNewNumber = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterName = (event) => {\r\n    setFilterPerson(event.target.value)\r\n  }\r\n\r\n  const RenderPeople = () => {\r\n    const filteredPersons = persons.filter(person => person.name.toUpperCase().indexOf(filterPerson.toUpperCase()) >= 0)\r\n    const people = filteredPersons.map(person => \r\n                    <li>\r\n                     {person.name} {person.number}\r\n                     <button onClick={() => deleteName(person.id)}>delete</button>\r\n                    </li>\r\n                   )\r\n    return (\r\n      <ul>\r\n      {people}   \r\n      </ul>\r\n    )\r\n  }\r\n\r\n  const errorStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 30,\r\n    background: 'lightgray',\r\n    width: '60%'\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <div style={errorStyle}>{errorMessage}</div>\r\n      <Filter handleFilterName={handleFilterName} filterPerson={filterPerson}/>\r\n      <h2>Add a new</h2>\r\n      <PersonForm addName={addName} newName={newName} handleNameChange={handleNameChange}  newNumber={newNumber} handleNewNumber={handleNewNumber} deleteName={deleteName}/>\r\n      <h2>Numbers</h2>\r\n      <RenderPeople persons={persons} filterPerson={filterPerson}/>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}